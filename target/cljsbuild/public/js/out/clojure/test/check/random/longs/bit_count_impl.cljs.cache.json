["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$bit-count"]],"~:name","~$clojure.test.check.random.longs.bit-count-impl","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$lookup",["^ ","^6","~$clojure.test.check.random.longs.bit-count-impl/lookup","~:file","target/cljsbuild/public/js/out/clojure/test/check/random/longs/bit_count_impl.cljs","~:line",18,"~:column",1,"~:end-line",18,"~:end-column",22,"~:private",true,"~:meta",["^ ","^?","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/random/longs/bit_count_impl.cljs","^@",18,"^A",16,"^B",18,"^C",22,"^D",true],"~:tag","~$array"],"^5",["^ ","~:protocol-inline",null,"^E",["^ ","^?","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/random/longs/bit_count_impl.cljs","^@",26,"^A",7,"^B",26,"^C",16,"~:arglists",["~#list",["~$quote",["^J",[["~$x"]]]]],"~:doc","Returns a JS number (not a Long), the number of set bits in the\n  given Long."],"^6","~$clojure.test.check.random.longs.bit-count-impl/bit-count","~:variadic",false,"^?","target/cljsbuild/public/js/out/clojure/test/check/random/longs/bit_count_impl.cljs","^C",16,"~:method-params",["^J",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^A",1,"^@",26,"^B",26,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[["~$x"]]]]],"^L","Returns a JS number (not a Long), the number of set bits in the\n  given Long."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^L",null]