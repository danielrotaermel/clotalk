["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.test.check.clojure-test","~:imports",null,"~:requires",["^ ","~$ct","~$cljs.test","^:","^:","~$clojure.test.check.impl","^;"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$exception-like?","^;","~$get-current-time-millis","^;"],"~:defs",["^ ","~$report-trial",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","~:line",149,"~:column",7,"~:end-line",149,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^J",[["~$property-fun","~$so-far","~$num-tests"]]]]]],"^5","~$clojure.test.check.clojure-test/report-trial","~:variadic",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",19,"~:method-params",["^J",[["^L","^M","^N"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^F",1,"^E",149,"^G",149,"~:max-fixed-arity",3,"~:fn-var",true,"^I",["^J",["^K",["^J",[["^L","^M","^N"]]]]]],"~$*default-test-count*",["^ ","^5","~$clojure.test.check.clojure-test/*default-test-count*","^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",23,"^F",1,"^G",23,"^H",36,"~:dynamic",true,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",23,"^F",16,"^G",23,"^H",36,"^X",true],"~:tag","~$number"],"~$*report-shrinking*",["^ ","^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",83,"^F",16,"^G",83,"^H",34,"^X",true],"^5","~$clojure.test.check.clojure-test/*report-shrinking*","^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",34,"^F",1,"^X",true,"^E",83,"^G",83,"^Y","~$boolean","~:doc","If true, a verbose report of the property being tested, the\n  failing return value, and the arguments provoking that failure is emitted\n  prior to the start of the shrinking search."],"~$*report-trials*",["^ ","^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",65,"^F",16,"^G",65,"^H",31,"^X",true],"^5","~$clojure.test.check.clojure-test/*report-trials*","^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",31,"^F",1,"^X",true,"^E",65,"^G",65,"^Y","^11","^12","Controls whether property trials should be reported via clojure.test/report.\n  Valid values include:\n\n  * false - no reporting of trials (default)\n  * a function - will be passed a clojure.test/report-style map containing\n  :clojure.test.check/property and :clojure.test.check/trial slots\n  * true - provides quickcheck-style trial reporting (dots) via\n  `trial-report-dots`\n\n  (Note that all reporting requires running `quick-check` within the scope of a\n  clojure.test run (via `test-ns`, `test-all-vars`, etc.)\n\n  Reporting functions offered by clojure.test.check include `trial-report-dots` and\n  `trial-report-periodic` (which prints more verbose trial progress information\n  every `*trial-report-period*` milliseconds."],"~$trial-report-dots",["^ ","^B",null,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",125,"^F",7,"^G",125,"^H",24,"^I",["^J",["^K",["^J",[[["~#cmap",[["^M","~$total"],"~:clojure.test.check.clojure-test/trial"]]]]]]],"^12","Intended to be bound as the value of `*report-trials*`; will emit a single\n  dot every 1000 trials reported."],"^5","~$clojure.test.check.clojure-test/trial-report-dots","^P",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",24,"^Q",["^J",[["~$p__69124"]]],"^R",null,"^S",["^J",[null,null]],"^F",1,"^E",125,"^G",125,"^T",1,"^U",true,"^I",["^J",["^K",["^J",[[["^16",[["^M","^17"],"^18"]]]]]]],"^12","Intended to be bound as the value of `*report-trials*`; will emit a single\n  dot every 1000 trials reported."],"~$assert-check",["^ ","^B",null,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",16,"^F",7,"^G",16,"^H",19,"^I",["^J",["^K",["^J",[[["^ ","~:keys",["~$result"],"~:as","~$m"]]]]]]],"^5","~$clojure.test.check.clojure-test/assert-check","^P",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",19,"^Q",["^J",[["~$p__69115"]]],"^R",null,"^S",["^J",[null,null]],"^F",1,"^E",16,"^G",16,"^T",1,"^U",true,"^I",["^J",["^K",["^J",[[["^ ","^1<",["^1="],"^1>","~$m"]]]]]]],"~$with-test-out*",["^ ","^B",null,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",106,"^F",7,"^G",106,"^H",21,"^I",["^J",["^K",["^J",[["~$f"]]]]]],"^5","~$clojure.test.check.clojure-test/with-test-out*","^P",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",21,"^Q",["^J",[["~$f"]]],"^R",null,"^S",["^J",[null,null]],"^F",1,"^E",106,"^G",106,"^T",1,"^U",true,"^I",["^J",["^K",["^J",[["~$f"]]]]]],"~$trial-report-periodic",["^ ","^B",null,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",110,"^F",7,"^G",110,"^H",28,"^I",["^J",["^K",["^J",[["~$m"]]]]],"^12","Intended to be bound as the value of `*report-trials*`; will emit a verbose\n  status every `*trial-report-period*` milliseconds, like this one:\n\n  Passing trial 3286 / 5000 for (your-test-var-name-here) (:)"],"^5","~$clojure.test.check.clojure-test/trial-report-periodic","^P",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",28,"^Q",["^J",[["~$m"]]],"^R",null,"^S",["^J",[null,null]],"^F",1,"^E",110,"^G",110,"^T",1,"^U",true,"^I",["^J",["^K",["^J",[["~$m"]]]]],"^12","Intended to be bound as the value of `*report-trials*`; will emit a verbose\n  status every `*trial-report-period*` milliseconds, like this one:\n\n  Passing trial 3286 / 5000 for (your-test-var-name-here) (:)"],"~$get-property-name",["^ ","^B",null,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",102,"^F",8,"^G",102,"^H",25,"~:private",true,"^I",["^J",["^K",["^J",[[["^ ","^L","~:clojure.test.check.clojure-test/property","^1>","~$report-map"]]]]]]],"^1F",true,"^5","~$clojure.test.check.clojure-test/get-property-name","^P",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",25,"^Q",["^J",[["~$p__69121"]]],"^R",null,"^S",["^J",[null,null]],"^F",1,"^E",102,"^G",102,"^T",1,"^U",true,"^I",["^J",["^K",["^J",[[["^ ","^L","^1G","^1>","^1H"]]]]]]],"~$*trial-report-period*",["^ ","^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",89,"^F",16,"^G",89,"^H",37,"^X",true],"^5","~$clojure.test.check.clojure-test/*trial-report-period*","^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",37,"^F",1,"^X",true,"^E",89,"^G",89,"^Y","^Z","^12","Milliseconds between reports emitted by `trial-report-periodic`."],"~$process-options",["^ ","~:no-doc",true,"^B",null,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",25,"^F",7,"^G",25,"^H",22,"^I",["^J",["^K",["^J",[["~$options"]]]]],"^1N",true],"^5","~$clojure.test.check.clojure-test/process-options","^P",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",22,"^Q",["^J",[["^1O"]]],"^R",null,"^S",["^J",[null,null]],"^F",1,"^E",25,"^G",25,"^T",1,"^U",true,"^I",["^J",["^K",["^J",[["^1O"]]]]]],"~$last-trial-report",["^ ","^5","~$clojure.test.check.clojure-test/last-trial-report","^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",93,"^F",1,"^G",93,"^H",33,"^1F",true,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",93,"^F",16,"^G",93,"^H",33,"^1F",true],"^Y","~$any"],"~$report-failure",["^ ","^B",null,"^C",["^ ","^D","/Users/ezekills/Git/clotalk/target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^E",155,"^F",7,"^G",155,"^H",21,"^I",["^J",["^K",["^J",[["^L","^1=","~$trial-number","~$failing-params"]]]]]],"^5","~$clojure.test.check.clojure-test/report-failure","^P",false,"^D","target/cljsbuild/public/js/out/clojure/test/check/clojure_test.cljc","^H",21,"^Q",["^J",[["^L","^1=","^1U","^1V"]]],"^R",null,"^S",["^J",[null,null]],"^F",1,"^E",155,"^G",155,"^T",4,"^U",true,"^I",["^J",["^K",["^J",[["^L","^1=","^1U","^1V"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^9","^:","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:clojure.test.check.clojure-test/params","^18","~:begin-test-var","~:begin-test","~:else","^5","~:num-tests","~:type","~:bad-options","~:fail","~:result","^1G","~:expected","~:cljs.test/default","~:clojure.test.check.clojure-test/shrinking","~:error","~:pass","^1=","~:actual","~:message"]],"~:order",["^28","^25","^29","^2>","^2?","^2<","^1=","^2=","^27","^24","^23","^26","^2:","^21","^22","^1G","^5","^18","^2;","^20"]],"^12",null]